@inherits LayoutComponentBase
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authStateProvider

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Class="app-bar">
        <MudContainer Class="d-flex justify-between align-center app-bar-content">
            <div class="logo-container">
                <Logo />
            </div>
            <div class="flex-grow-1 d-flex justify-center align-center">
                <Search />
            </div>
            <div class="d-flex align-center gap-2">
                <MudButton Style="width: 100px" Variant="Variant.Text" Size="Size.Medium" OnClick="@(() => DrawerToggle(Anchor.Start))">
                    Categories
                </MudButton>
                <ContactButton />
                <CartCounter />
                <AccountButton />
                <AuthorizeView>
                    <Authorized>
                        <AdminMenu />
                    </Authorized>
                </AuthorizeView>
            </div>
        </MudContainer>
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen"
               Anchor="@anchor"
               Elevation="1"
               Variant="@DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Categories</MudText>
        </MudDrawerHeader>
        <CategoriesNavMenu />
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<style>
    .app-bar {
        background-color: #FAFAFA;
        height: 4rem;
    }

    .app-bar-content {
        gap: 1rem;
    }

    .logo-container {
        flex: 1;
    }
</style>

@code {
    //Drawer
    bool _drawerOpen = false;
    Anchor anchor;

    void DrawerToggle(Anchor anchor)
    {
        _drawerOpen = !_drawerOpen;
        this.anchor = anchor;
    }
}

