@page "/orders/admin"
@using Diploma.DTO.Orders;
@using MudBlazor
@attribute [Authorize(Roles = "Admin")]
@inject IOrderService OrderService
@inject IItemService ItemService
@inject NavigationManager NavigationManager

<div style="margin-top: 30px; margin-left: 20px;">
    <MudText Typo="Typo.h4">ALL ORDERS (@orderCount)</MudText>
</div>

<MudContainer Class="page-container" Style="padding-top: 3%; padding-bottom: 15%;">
    <MudTable Items="@orderOverviews">
        <HeaderContent>
            <MudTh>Order ID</MudTh>
            <MudTh>Order Date</MudTh>
            <MudTh>Total Price</MudTh>
            <MudTh>Status</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            @if (orderOverviews != null)
            {
                <MudTd>@context.Id</MudTd>
                <MudTd>@context.OrderDate</MudTd>
                <MudTd>$@context.TotalPrice</MudTd>
                <MudTd>@context.Status</MudTd>
                <MudTd>
                    <a href="order/admin/@context.Id/details">Details</a>
                </MudTd>
                @if (context.Status == OrderStatus.Pending)
                {
                    <MudTd>
                        <MudIconButton Icon="@Icons.Material.Filled.Check" @onclick="() => ApproveOrder(context.Id)" />
                    </MudTd>
                }
                else if (context.Status == OrderStatus.Approved)
                {
                    <MudTd>
                        <MudButton OnClick="() => SetStatusToShipped(context.Id)">Shipped</MudButton>
                    </MudTd>

                }
                else if (context.Status == OrderStatus.Shipped)
                {
                    <MudTd>
                        <MudButton OnClick="() => SetStatusToDelivered(context.Id)">Delivered</MudButton>
                    </MudTd>
                }
            }
        </RowTemplate>
    </MudTable>
</MudContainer>