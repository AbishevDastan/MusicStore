// <auto-generated />
using System;
using Diploma.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diploma.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230831132248_2")]
    partial class _2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diploma.Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ItemId");

                    b.ToTable("CartItems", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "images/Categories/acoustic-guitars-category.jpg",
                            Name = "Acoustic Guitars",
                            Url = "acoustic-guitars"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "images/Categories/electric-guitars-category.jpg",
                            Name = "Electric Guitars",
                            Url = "electric-guitars"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "images/Categories/bass-guitars-category.jpg",
                            Name = "Bass Guitars",
                            Url = "bass-guitars"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "images/Categories/drums-category.jpg",
                            Name = "Drums",
                            Url = "drums"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "images/Categories/trumpets-category.jpg",
                            Name = "Trumpets",
                            Url = "trumpets"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "images/Categories/violins-category.jpg",
                            Name = "Violins",
                            Url = "violins"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "images/Categories/pianos-category.jpg",
                            Name = "Pianos",
                            Url = "pianos"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "images/Categories/synthesizers-category.jpg",
                            Name = "Synthesizers",
                            Url = "synthesizers"
                        });
                });

            modelBuilder.Entity("Diploma.Domain.Entities.DeliveryInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryInformations", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int");

                    b.Property<int>("StockStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "",
                            ImageUrl = "images/Items/acoustic-guitar-1.jpg",
                            Name = "Martin 000-28 Eric Clapton Signature Auditorium Acoustic Guitar",
                            Price = 3500m,
                            QuantityInStock = 10,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "",
                            ImageUrl = "images/Items/acoustic-guitar-2.jpg",
                            Name = "Ibanez AW54OPN Artwood Dreadnought Acoustic Guitar",
                            Price = 399m,
                            QuantityInStock = 20,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "",
                            ImageUrl = "images/Items/acoustic-guitar-3.jpg",
                            Name = "Ibanez Talman TCY10E Acoustic-electric Guitar",
                            Price = 1999m,
                            QuantityInStock = 17,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "",
                            ImageUrl = "images/Items/electric-guitar-1.jpg",
                            Name = "Jackson JS Series Kelly JS32",
                            Price = 1499m,
                            QuantityInStock = 20,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "",
                            ImageUrl = "images/Items/electric-guitar-2.jpg",
                            Name = "Jackson JS Series Dinky Arch Top JS22",
                            Price = 1m,
                            QuantityInStock = 10,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "",
                            ImageUrl = "images/Items/bass-guitar-1.jpg",
                            Name = "Jackson JS Series Spectra Bass JS2",
                            Price = 999m,
                            QuantityInStock = 23,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "",
                            ImageUrl = "images/Items/bass-guitar-2.jpg",
                            Name = "Ibanez SR Standard 5-String Electric Bass Guitar",
                            Price = 1799m,
                            QuantityInStock = 7,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "",
                            ImageUrl = "images/Items/drums-1.jpg",
                            Name = "Donner DED-100 Electric Drum Set",
                            Price = 399m,
                            QuantityInStock = 15,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "",
                            ImageUrl = "images/Items/drums-2.jpg",
                            Name = "Vangoa Acoustic Drum Kit",
                            Price = 899m,
                            QuantityInStock = 6,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "",
                            ImageUrl = "images/Items/trumpet-1.jpg",
                            Name = "Glory Bb Trumpet",
                            Price = 128m,
                            QuantityInStock = 12,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            Description = "",
                            ImageUrl = "images/Items/violin-1.jpg",
                            Name = "Poseidon Violin",
                            Price = 99m,
                            QuantityInStock = 15,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            Description = "",
                            ImageUrl = "images/Items/violin-2.jpg",
                            Name = "Mendini By Cecilio Violin - MV500+92D",
                            Price = 249m,
                            QuantityInStock = 6,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 7,
                            Description = "",
                            ImageUrl = "images/Items/piano-1.jpg",
                            Name = "Cossain Digital Piano",
                            Price = 599m,
                            QuantityInStock = 8,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 7,
                            Description = "",
                            ImageUrl = "images/Items/piano-2.jpg",
                            Name = "FingerBallet Portable Piano Keyboard",
                            Price = 399m,
                            QuantityInStock = 10,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 7,
                            Description = "",
                            ImageUrl = "images/Items/piano-3.jpg",
                            Name = "MAGICON BX2 88-Key Foldable Electronic Piano",
                            Price = 720m,
                            QuantityInStock = 10,
                            SoldQuantity = 0,
                            StockStatus = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            Description = "",
                            ImageUrl = "images/Items/synthesizer-1.jpg",
                            Name = "Behringer DeepMind 6 37-Key 6-Voice Analog Synthesizer",
                            Price = 499m,
                            QuantityInStock = 4,
                            SoldQuantity = 0,
                            StockStatus = 0
                        });
                });

            modelBuilder.Entity("Diploma.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WishlistItems", (string)null);
                });

            modelBuilder.Entity("Diploma.Domain.Entities.Item", b =>
                {
                    b.HasOne("Diploma.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Diploma.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Diploma.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Diploma.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
